DECLARE PLUGIN "coq-mebi.mebi"

{
(* If we forget this line and include our own tactic definition using
  TACTIC EXTEND, as below, then we get the strange error message
  no implementation available for Tacentries, only when compiling
  theories/Loader.v *)
(* open Ltac_plugin *)

open Stdarg
(* open Pp *)
}

(* https://github.com/rocq-prover/rocq/blob/master/doc/plugin_tutorial/tuto0/src/g_tuto0.mlg *)
(* https://github.com/rocq-prover/rocq/blob/master/doc/plugin_tutorial/tuto1/src/g_tuto1.mlg *)
(* https://github.com/rocq-prover/rocq/blob/master/doc/plugin_tutorial/tuto2/src/g_tuto2.mlg *)

(* https://github.com/rocq-prover/rocq/blob/master/dev/doc/parsing.md *)

(* https://github.com/ybertot/plugin_tutorials/blob/master/tuto1/src/g_tuto1.mlg *)


VERNAC COMMAND EXTEND MeBiLTS CLASSIFIED AS QUERY

| ["MeBi" "Set"   "Bound" int(b)       ] -> {Params.set_bounds (b, None)}
| ["MeBi" "Set"   "Bound" int(b) int(a)] -> {Params.set_bounds (b, Some a)}

| ["MeBi" "Set"   "DumpToFile"  "True" ] -> {Params.set_dump_to_file true}
| ["MeBi" "Set"   "DumpToFile"  "False"] -> {Params.set_dump_to_file false}

| ["MeBi" "Set"   "ShowDebug"   "True" ] -> {Params.set_show_debug true}
| ["MeBi" "Set"   "ShowDebug"   "False"] -> {Params.set_show_debug false}

| ["MeBi" "Set"   "ShowDetails" "True" ] -> {Params.set_show_details true}
| ["MeBi" "Set"   "ShowDetails" "False"] -> {Params.set_show_details false}

| ["MeBi" "Set"   "WeakMode"    "True" ] -> {Params.set_weak_mode true}
| ["MeBi" "Set"   "WeakMode"    "False"] -> {Params.set_weak_mode false}

| ["MeBi" "Reset" "Bound"      ] -> {Params.reset_bounds ()}
| ["MeBi" "Reset" "DumpToFile" ] -> {Params.reset_dump_to_file ()}
| ["MeBi" "Reset" "ShowDebug"  ] -> {Params.reset_show_debug ()}
| ["MeBi" "Reset" "ShowDetails"] -> {Params.reset_show_details ()}
| ["MeBi" "Reset" "WeakMode"   ] -> {Params.reset_weak_mode ()}

| ["MeBi" "Check" "Bound"      ] -> {Params.printout_bounds ()}
| ["MeBi" "Check" "DumpToFile" ] -> {Params.printout_dump_to_file ()}
| ["MeBi" "Check" "ShowDebug"  ] -> {Params.printout_show_debug ()}
| ["MeBi" "Check" "ShowDetails"] -> {Params.printout_show_details ()}
| ["MeBi" "Check" "WeakMode"   ] -> {Params.printout_weak_mode ()}
| ["MeBi" "Check" "All"        ] -> {Params.printout_all ()}

| ["MeBi" "Set"   "Weak" "Option" reference(x)] -> {Mebi_wrapper.run (Command.set_weak_type (Command.OptionRef x))}
| ["MeBi" "Set"   "Weak" "Option" constr(x)   ] -> {Mebi_wrapper.run (Command.set_weak_type (Command.OptionConstr x))}
| ["MeBi" "Set"   "Weak" constr(x) "Of" 
                                  reference(y)] -> {Mebi_wrapper.run (Command.set_weak_type (Command.Custom (x, y)))}
| ["MeBi" "Check" "Weak"                      ] -> {Mebi_wrapper.run (Command.get_weak_type ())}


| ["MeBi" "LTS" constr(x) "Using" reference(r)] -> {Mebi_wrapper.run (Command.run (Command.MakeModel (Command.LTS, (x, r))) [])}
| ["MeBi" "LTS" constr(x) "Using" reference(r) 
                            reference_list(rs)] -> {Mebi_wrapper.run (Command.run (Command.MakeModel (Command.LTS, (x, r))) rs)}

| ["MeBi" "FSM" constr(x) "Using" reference(r)] -> {Mebi_wrapper.run (Command.run (Command.MakeModel (Command.FSM, (x, r))) [])}
| ["MeBi" "FSM" constr(x) "Using" reference(r) 
                            reference_list(rs)] -> {Mebi_wrapper.run (Command.run (Command.MakeModel (Command.FSM, (x, r))) rs)}

| ["MeBi" "Saturate" constr(x) "Using" reference(r)] -> {Mebi_wrapper.run (Command.run (Command.SaturateModel (x, r)) [])}
| ["MeBi" "Saturate" constr(x) "Using" reference(r) 
                                 reference_list(rs)] -> {Mebi_wrapper.run (Command.run (Command.SaturateModel (x, r)) rs)}

| ["MeBi" "Minimize" constr(x) "Using" reference(r)] -> {Mebi_wrapper.run (Command.run (Command.MinimizeModel (x, r)) [])}
| ["MeBi" "Minimize" constr(x) "Using" reference(r) 
                                 reference_list(rs)] -> {Mebi_wrapper.run (Command.run (Command.MinimizeModel (x, r)) rs)}

| ["MeBi" "Bisim" constr(x) "With" reference(a) 
            "And" constr(y) "With" reference(b)] -> {Mebi_wrapper.run (Command.run (Command.CheckBisimilarity ((x, a), (y, b))) [])}
| ["MeBi" "Bisim" constr(x) "With" reference(a) 
            "And" constr(y) "With" reference(b) 
                     "Using" reference_list(rs)] -> {Mebi_wrapper.run (Command.run (Command.CheckBisimilarity ((x, a), (y, b))) rs)}

| ["MeBi" "Help"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Basic ())) [])}

| ["MeBi" "Help" "Set"              ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.General ()))) [])}
| ["MeBi" "Help" "Set" "Bound"      ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.Bound ()))) [])}
| ["MeBi" "Help" "Set" "DumpToFile" ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.DumpToFile ()))) [])}
| ["MeBi" "Help" "Set" "ShowDebug"  ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.ShowDebug ()))) [])}
| ["MeBi" "Help" "Set" "ShowDetails"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.ShowDetails ()))) [])}
| ["MeBi" "Help" "Set" "WeakMode"   ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.WeakMode ()))) [])}
| ["MeBi" "Help" "Set" "Weak"       ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Set (Mebi_help.Weak ()))) [])}

| ["MeBi" "Help" "Check"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Check ())) [])}

| ["MeBi" "Help" "LTS"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.LTS ())) [])}
| ["MeBi" "Help" "FSM"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.FSM ())) [])}

| ["MeBi" "Help" "Saturate"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Saturate ())) [])}
| ["MeBi" "Help" "Minimize"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Minimize ())) [])}

| ["MeBi" "Help" "Bisim"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Bisim ())) [])}

| ["MeBi" "Help" "Info"] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Info ())) [])}

| ["MeBi" ] -> {Mebi_wrapper.run (Command.run (Command.Help (Mebi_help.Unrecognized ())) [])}

| ["MeBi" "Info"] -> {Mebi_wrapper.run (Command.run (Command.Info ()) [])}
END
