DECLARE PLUGIN "coq-mebi.mebi"

{

(*
(* If we forget this line and include our own tactic definition using
  TACTIC EXTEND, as below, then we get the strange error message
  no implementation available for Tacentries, only when compiling
  theories/Loader.v
*)
open Ltac_plugin
*)

open Stdarg

(* open Pp *)

}

(*
 * TODO: so far, classified as query. What it should do: read proposition, check
 * it has the corret type. Print proposition.
 *)
VERNAC COMMAND EXTEND MeBiLTS CLASSIFIED AS QUERY
| [ "MeBi" "LTS" reference(r) constr(t) ] ->
  { Mebi_monad.run (Command.bounded_lts (Nametab.global r) t) }
| [ "MeBi" "LTS" "show_debug" reference(r) constr(t) ] ->
  { Mebi_monad.run (Command.bounded_lts ~debug:true (Nametab.global r) t) }
(* run bisim alg on two terms (first, builds fsm) *)
| [ "MeBi" "Bisim" "KS90" reference(r) constr(t) reference(r') constr(t') ] ->
  { (Mebi_monad.run
      (Command.lts_bisim_ks90
        ~debug:false
        ((Nametab.global r), t)
        ((Nametab.global r'), t'))) }
| [ "MeBi" "Bisim" "KS90" "show_debug" reference(r) constr(t) reference(r') constr(t') ] ->
  { (Mebi_monad.run
      (Command.lts_bisim_ks90
        ~debug:true
        ((Nametab.global r), t)
        ((Nametab.global r'), t'))) }
(* examples *)
(* | [ "MeBi" "Bisim" "KS90" "exa1" ] ->
  match Examples.exa_1 with
  | {s, t; _} -> (
    { (Mebi_monad.run
        (Command.fsm_bisim_ks90
          ~debug:false
          s
          t)) })
| [ "MeBi" "Bisim" "KS90" "exa1" "show_debug" ] ->
  match Examples.exa_1 with
  | {s, t; _} -> (
    { (Mebi_monad.run
        (Command.fsm_bisim_ks90
          ~debug:true
          s
          t)) })
| [ "MeBi" "Bisim" "KS90" "exa2" ] ->
  match Examples.exa_2 with
  | {s, t; _} -> (
    { (Mebi_monad.run
        (Command.fsm_bisim_ks90
          ~debug:false
          s
          t)) })
| [ "MeBi" "Bisim" "KS90" "exa2" "show_debug" ] ->
  match Examples.exa_2 with
  | {s, t; _} -> (
    { (Mebi_monad.run
        (Command.fsm_bisim_ks90
          ~debug:true
          s
          t)) }) *)
END
